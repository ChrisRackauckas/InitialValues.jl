var documenterSearchIndex = {"docs":
[{"location":"#UniversalIdentity.jl-1","page":"Home","title":"UniversalIdentity.jl","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"UniversalIdentity\nUniversalIdentity.Identity","category":"page"},{"location":"#UniversalIdentity","page":"Home","title":"UniversalIdentity","text":"UniversalIdentity\n\n(Image: Stable) (Image: Dev) (Image: Build Status) (Image: Codecov) (Image: Coveralls) (Image: Aqua QA)\n\njulia> using UniversalIdentity: Identity\n\njulia> Identity(+) + 1\n1\n\njulia> foldl(+, 1:3, init=Identity(+))\n6\n\nFollowing methods are defined:\n\njulia> Identity(*) * 1\n1\n\njulia> Identity(&) & 1\n1\n\njulia> Identity(|) | 1\n1\n\njulia> min(Identity(min), 1)\n1\n\njulia> max(Identity(max), 1)\n1\n\njulia> Base.add_sum(Identity(Base.add_sum), 1)\n1\n\njulia> Base.mul_prod(Identity(Base.mul_prod), 1)\n1\n\nMethod ambiguities are tested using Aqua.jl.\n\n\n\n\n\n","category":"module"},{"location":"#UniversalIdentity.Identity","page":"Home","title":"UniversalIdentity.Identity","text":"Identity(op)\n\nA generic (left) identity for op.\n\nExamples\n\njulia> using UniversalIdentity: Identity\n\njulia> Identity(*) * 1\n1\n\njulia> Identity(*) * :actual_anything_works\n:actual_anything_works\n\njulia> foldl(+, 1:3, init=Identity(+))\n6\n\n\n\n\n\n","category":"type"}]
}
